<?xml version="1.0" encoding="UTF-8" ?>
<!--

       Copyright 2015-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.myproject.adminuser.mapper.SysUserMapper">
    <!--<cache type="org.mybatis.caches.RedisCache" />-->
    <resultMap type="SysUser" id="resultMap">
        <id property="id" column="ID" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="VARCHAR" />
        <result column="login_name" property="loginName" jdbcType="VARCHAR" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="status" property="status" jdbcType="SMALLINT" />
        <result column="create_time" property="createTime" jdbcType="BIGINT" />
        <result column="version" property="version" jdbcType="INTEGER" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
        <result column="roleName" property="roleName" jdbcType="VARCHAR" />
    </resultMap>

    <select id="selectById"  resultMap="resultMap" parameterType="java.lang.Integer">
        select id,user_id,login_name,user_name,password,status,create_time from sys_user  where id = #{id}
    </select>

    <select id="selectByLoginName"  resultMap="resultMap" parameterType="java.lang.String">
        select t1.id,t1.user_id,t1.login_name,t1.user_name,t1.password,t1.status,t1.create_time
        from sys_user t1  where t1.login_name = #{value}
    </select>

    <select id="selectByUserName"  resultMap="resultMap" parameterType="java.lang.String">
        select t1.id,t1.user_id,t1.login_name,t1.user_name,t1.password,t1.status,t1.create_time
        from sys_user t1  where t1.user_name = #{value}
    </select>

    <select id="getAll" resultMap="resultMap" useCache="false">
        select id,user_id,login_name,user_name,password,status,create_time,nick_name from sys_user
    </select>

    <select id="getPage" resultMap="resultMap" useCache="false" parameterType="java.lang.String">
        select u.id,u.user_id,u.login_name,u.user_name,u.status,u.create_time,
        u.version,u.nick_name,u.phone,r.role_name as roleName
        from sys_user u
        left join sys_user_role ur on ur.user_id = u.user_id
        left join sys_role r on r.role_id = ur.role_id
        where 1=1
        <if test="keyword != null">
            AND (
                u.user_name LIKE CONCAT('%',#{keyword},'%') OR
                u.login_name LIKE CONCAT('%',#{keyword},'%') OR
                u.phone LIKE CONCAT('%',#{keyword},'%')
            )
        </if>
    </select>

    <insert id="addUsers" parameterType="SysUser" >
        insert into sys_user(user_id,user_name,nick_name,password,create_time,status,version,phone,login_name,link_user_id)
        VALUES (#{userId},#{userName},#{nickName},#{password},#{createTime},#{status},#{version},#{phone},#{loginName},#{linkUserId})
    </insert>


    <delete id="delusers" parameterType="Integer">
        delete from sys_user where id=#{id}
    </delete>


    <select id="findByUserId" parameterType="String" resultType="SysUser">
        select user_id,id,login_name,user_name,password,status, create_time,
        version,phone,link_user_id from sys_user where user_id=#{userId}
    </select>

    <select id="checkUsers" parameterType="String" resultType="Integer">
        select count(user_name) from sys_user where user_name = #{userName}
    </select>

    <select id="findAll" resultType="SysUser">
        select user_id, id,login_name, user_name,password ,status ,createTime,
        version, phone from sys_user
    </select>

    <select id="selectUsers" parameterType="Integer" resultType="SysUser">
        select id, user_id,user_name,nick_name,password,create_time,status,version,phone,login_name,link_user_id from sys_user where id = #{id}
    </select>

    <update id="updateUser" parameterType="SysUser">
        update sys_user
        <trim prefix="set" suffixOverrides=",">
            <if test="userName != null">user_name = #{userName},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="nickName != null">nick_name = #{nickName},</if>
            <if test="loginName != null">login_name = #{loginName},</if>
            <if test="password != null">password = #{password},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="version != null">version = version + 1 ,</if>
            <if test="linkUserId != null and linkUserId != ''">link_user_id = #{linkUserId}</if>
        </trim>
        where user_id = #{userId}
        <if test="version != null">AND version = #{version}</if>
    </update>

 </mapper>
